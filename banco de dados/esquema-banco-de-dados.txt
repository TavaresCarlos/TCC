CREATE EXTENSION postgis;

CREATE TABLE configuracaoInicial(
idinicial SERIAL NOT NULL,
nomesistema varchar(50),
latitude float,
longitude float,
zoom int,
descricao varchar(200),
PRIMARY KEY (idinicial)
);

CREATE TABLE usuario(
idUsuario SERIAL NOT NULL,
nome varchar(50),
apelido varchar(50),
email varchar(50),
senha varchar(200),
faixaEtaria varchar(50),
tipo varchar(50),
PRIMARY KEY (idUsuario)
);

CREATE TABLE contato(
idContato SERIAL NOT NULL,
nome varchar(50),
assunto varchar(50),
email varchar(50),
data date,
mensagem varchar(500),
PRIMARY KEY (idContato)
);

CREATE TABLE categorias(
idCategorias SERIAL NOT NULL,
nomecat varchar(200),
PRIMARY KEY (idCategorias)
);

CREATE TABLE subcategorias(
idSubcategorias SERIAL NOT NULL,
nomesubcat varchar(200),
idCategorias int,
CONSTRAINT fk_subCategoriasCategorias FOREIGN KEY (idCategorias) REFERENCES categorias (idCategorias),
PRIMARY KEY (idSubcategorias)
);

CREATE TABLE contribuicao(
idContribuicao SERIAL NOT NULL,
titulo varchar(200),
data date,
distanciaArea float,
descricao varchar(200),
tipoGeometria varchar (50),
publicado varchar(3),
idCategorias int,
idSubcategorias int,
idUsuario int,
geometria geometry,
CONSTRAINT fk_usuarioContribuicao FOREIGN KEY (idUsuario) REFERENCES usuario (idUsuario),
CONSTRAINT fk_contribuicaoCategorias FOREIGN KEY (idCategorias) REFERENCES categorias (idCategorias),
CONSTRAINT fk_contribuicaoSubcategorias FOREIGN KEY (idSubcategorias) REFERENCES subcategorias (idSubcategorias),
PRIMARY KEY (idContribuicao)
);

INSERT INTO usuario VALUES ('1', 'admin', 'admin', 'admin@admin', 'admin', '', 'root');
INSERT INTO usuario VALUES ('2', 'anonimo', 'anonimo', 'anonimo@anonimo', '', '', 'anonimo');

//Consulta que retorna todos os dados de contribuição com o nome das categorias e subcategorias
SELECT titulo, categorias.nomecat, subcategorias.nomesubcat, to_char(data, 'DD/MM/YYYY'), distanciaarea, descricao, tipogeometria, ST_AsGeoJSON(geom) FROM contribuicao INNER JOIN categorias ON contribuicao.idcategorias =  categorias.idcategorias INNER JOIN subcategorias ON contribuicao.idsubcategorias = subcategorias.idsubcategorias WHERE publicado = 'nao'










